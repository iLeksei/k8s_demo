apiVersion: v1
kind: ConfigMap
metadata:
  name: common-config
  namespace: cloud-demo
data:
  server_port: "8080"
  eureka_enabled: "false"
  config_server_enabled: "false"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: provider-examinator-config
  namespace: cloud-demo
data:
    health_check_message: "Hello, world!"
#  application.properties: |-
#    health_check_message: "Hello, world!"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: examinator-deployment
  namespace: cloud-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: examinator
  template:
    metadata:
      labels:
        name: examinator
    spec:
      containers:
        - name: questions-provider-container
          image: application/examinator:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 900m
            requests:
              cpu: 450m
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
          env:
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: server_port
            - name: EUREKA_CLIENT_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: eureka_enabled
            - name: SPRING_CLOUD_CONFIG_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: config_server_enabled
            - name: HEALTH_CHECK_MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: provider-examinator-config
                  key: health_check_message
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-js-questions-deployment
  namespace: cloud-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: backend-js-questions
  template:
    metadata:
      labels:
        name: backend-js-questions
    spec:
      containers:
        - name: js-questions-provider-container
          image: application/provider-js-questions:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: server_port
            - name: EUREKA_CLIENT_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: eureka_enabled
            - name: SPRING_CLOUD_CONFIG_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: config_server_enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-java-questions-deployment
  namespace: cloud-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: backend-java-questions
  template:
    metadata:
      labels:
        name: backend-java-questions
    spec:
      containers:
        - name: java-questions-provider-container
          image: application/provider-java-questions:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: server_port
            - name: EUREKA_CLIENT_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: eureka_enabled
---
apiVersion: v1
kind: Service
metadata:
  name: app-examinator-service
  namespace: cloud-demo
spec:
  selector:
    name: examinator
  type: LoadBalancer
  ports:
    - port: 8093
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: provider-java-questions
  namespace: cloud-demo
spec:
  selector:
    name: backend-java-questions
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: provider-js-questions
  namespace: cloud-demo
spec:
  selector:
    name: backend-js-questions
  ports:
    - port: 8080
      targetPort: 8080
---
# HAVE TO CHECK ENABLED ADDON METRICS-SERVER
# minikube addons list
# minikube addons enable metrics-server
# minikube start --extra-config=controller-manager.horizontal-pod-autoscaler-use-rest-clients=false
# --kubelet-insecure-tls=true add flag to metric-server (mb need to add additionally "hostNetwork: true" to config)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: examinator-autoscaler
  namespace: cloud-demo
spec:
  minReplicas: 1
  maxReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: examinator-deployment
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 15
---
#NEXT SECTIONS FOR @RefreshScope and remove ENV
#https://stackoverflow.com/questions/56863782/cannot-read-configmap-with-name-xx-in-namespace-default-ignoring
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: cloud-demo
  name: namespace-reader
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: namespace-reader-binding
  namespace: cloud-demo
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ""
roleRef:
  kind: Role
  name: namespace-reader
  apiGroup: ""